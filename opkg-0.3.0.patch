diff --git a/libopkg/file_util.h b/libopkg/file_util.h
index c3cf9c6..73c4d44 100644
--- a/libopkg/file_util.h
+++ b/libopkg/file_util.h
@@ -23,6 +23,8 @@
 extern "C" {
 #endif
 
+#include <stdio.h>
+
 int file_exists(const char *file_name);
 int file_is_dir(const char *file_name);
 int file_is_symlink(const char *file_name);
diff --git a/libopkg/opkg_archive.c b/libopkg/opkg_archive.c
index be903e4..0d0576c 100644
--- a/libopkg/opkg_archive.c
+++ b/libopkg/opkg_archive.c
@@ -22,6 +22,7 @@
 #include <stdio.h>
 #include <string.h>
 
+#include "opkg_conf.h"
 #include "opkg_message.h"
 #include "opkg_archive.h"
 #include "file_util.h"
@@ -716,6 +717,9 @@ struct opkg_ar *ar_open_pkg_data_archive(const char *filename)
     ar->extract_flags = ARCHIVE_EXTRACT_OWNER | ARCHIVE_EXTRACT_PERM |
         ARCHIVE_EXTRACT_TIME | ARCHIVE_EXTRACT_UNLINK;
 
+    if(opkg_config->ignore_uid)
+        ar->extract_flags &= ~ARCHIVE_EXTRACT_OWNER;
+
     return ar;
 }
 
diff --git a/libopkg/opkg_conf.c b/libopkg/opkg_conf.c
index aa2f8c7..5c156c5 100644
--- a/libopkg/opkg_conf.c
+++ b/libopkg/opkg_conf.c
@@ -20,6 +20,7 @@
 #include "config.h"
 
 #include <stdio.h>
+#include <string.h>
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -58,6 +59,7 @@ static opkg_option_t options[] = {
     {"force_overwrite", OPKG_OPT_TYPE_BOOL, &_conf.force_overwrite},
     {"force_downgrade", OPKG_OPT_TYPE_BOOL, &_conf.force_downgrade},
     {"force_reinstall", OPKG_OPT_TYPE_BOOL, &_conf.force_reinstall},
+    {"ignore_uid", OPKG_OPT_TYPE_BOOL, &_conf.ignore_uid},
     {"force_space", OPKG_OPT_TYPE_BOOL, &_conf.force_space},
     {"force_postinstall", OPKG_OPT_TYPE_BOOL, &_conf.force_postinstall},
     {"autoremove", OPKG_OPT_TYPE_BOOL, &_conf.autoremove},
@@ -244,6 +246,7 @@ int opkg_conf_set_option(const char *name, const char *value, int overwrite)
             } else {
                 /* Let's not leak memory. */
                 free(*((char **const)o->value));
+                *((char **const)o->value) = NULL;
             }
         }
 
@@ -518,6 +521,7 @@ static int glob_errfunc(const char *epath, int eerrno)
 
 int opkg_conf_init(void)
 {
+    memset(opkg_config, 0, sizeof(opkg_conf_t));
     pkg_src_list_init(&opkg_config->pkg_src_list);
     pkg_src_list_init(&opkg_config->dist_src_list);
     pkg_dest_list_init(&opkg_config->pkg_dest_list);
@@ -609,6 +613,7 @@ int opkg_conf_load(void)
 
     opkg_config->restrict_to_default_dest = 0;
     opkg_config->default_dest = NULL;
+
 #if defined(HAVE_PATHFINDER)
     opkg_config->check_x509_path = 1;
 #endif
@@ -766,6 +771,7 @@ int opkg_conf_load(void)
 
  err4:
     free(opkg_config->lists_dir);
+    opkg_config->lists_dir = NULL;
 
     pkg_hash_deinit();
     hash_table_deinit(&opkg_config->file_hash);
@@ -796,7 +802,10 @@ int opkg_conf_load(void)
  err0:
     nv_pair_list_deinit(&opkg_config->tmp_dest_list);
     free(opkg_config->dest_str);
+    opkg_config->dest_str = NULL;
+
     free(opkg_config->conf_file);
+    opkg_config->conf_file = NULL;
 
     return -1;
 }
@@ -813,7 +822,10 @@ void opkg_conf_deinit(void)
         rm_r(opkg_config->cache_dir);
 
     free(opkg_config->dest_str);
+    opkg_config->dest_str = NULL;
+
     free(opkg_config->conf_file);
+    opkg_config->conf_file = NULL;
 
     pkg_src_list_deinit(&opkg_config->pkg_src_list);
     pkg_src_list_deinit(&opkg_config->dist_src_list);
diff --git a/libopkg/opkg_conf.h b/libopkg/opkg_conf.h
index 13bf124..d17eafd 100644
--- a/libopkg/opkg_conf.h
+++ b/libopkg/opkg_conf.h
@@ -85,6 +85,7 @@ typedef struct opkg_conf {
     int force_overwrite;
     int force_downgrade;
     int force_reinstall;
+    int ignore_uid;
     int force_space;
     int force_removal_of_dependent_packages;
     int force_removal_of_essential_packages;
diff --git a/libopkg/pkg.c b/libopkg/pkg.c
index 4c4fa15..9680de5 100644
--- a/libopkg/pkg.c
+++ b/libopkg/pkg.c
@@ -873,11 +873,11 @@ static int order(char x)
 {
     if (x == '~')
         return -1;
-    if (isdigit(x))
+    if (isdigit((int)x))
         return 0;
     if (!x)
         return 0;
-    if (isalpha(x))
+    if (isalpha((int)x))
         return x;
 
     return 256 + (int)x;
@@ -893,7 +893,7 @@ static int verrevcmp(const char *val, const char *ref)
     while (*val || *ref) {
         int first_diff = 0;
 
-        while ((*val && !isdigit(*val)) || (*ref && !isdigit(*ref))) {
+        while ((*val && !isdigit((int)*val)) || (*ref && !isdigit((int)*ref))) {
             int vc = order(*val), rc = order(*ref);
             if (vc != rc)
                 return vc - rc;
@@ -905,15 +905,15 @@ static int verrevcmp(const char *val, const char *ref)
             val++;
         while (*ref == '0')
             ref++;
-        while (isdigit(*val) && isdigit(*ref)) {
+        while (isdigit((int)*val) && isdigit((int)*ref)) {
             if (!first_diff)
                 first_diff = *val - *ref;
             val++;
             ref++;
         }
-        if (isdigit(*val))
+        if (isdigit((int)*val))
             return 1;
-        if (isdigit(*ref))
+        if (isdigit((int)*ref))
             return -1;
         if (first_diff)
             return first_diff;
