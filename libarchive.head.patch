diff --git a/configure.ac b/configure.ac
index ea2c5d7..2486420 100644
--- a/configure.ac
+++ b/configure.ac
@@ -248,6 +248,13 @@ case $host in
   ;;
 esac
 
+case $host in
+  *cygwin* )
+  AC_DEFINE([_NSIG], NSIG, [Changes the standard _NSIG to Cygwin's NSIG.])
+  ;;
+esac
+
+
 # Checks for header files.
 AC_HEADER_DIRENT
 AC_HEADER_SYS_WAIT
diff --git a/libarchive/archive_read_support_format_warc.c b/libarchive/archive_read_support_format_warc.c
index 6bd15f6..97b5dbd 100644
--- a/libarchive/archive_read_support_format_warc.c
+++ b/libarchive/archive_read_support_format_warc.c
@@ -534,7 +534,7 @@ xstrpisotime(const char *s, char **endptr)
 
 	/* as a courtesy to our callers, and since this is a non-standard
 	 * routine, we skip leading whitespace */
-	for (; isspace(*s); s++);
+	for (; isspace((int)(*s)); s++);
 
 	/* read year */
 	if ((tm.tm_year = strtoi_lim(s, &s, 1583, 4095)) < 0 || *s++ != '-') {
@@ -638,7 +638,7 @@ _warc_rdtyp(const char *buf, size_t bsz)
 		return WT_NONE;
 	}
 	/* overread whitespace */
-	for (val += sizeof(_key) - 1U; val < eob && isspace(*val); val++);
+	for (val += sizeof(_key) - 1U; val < eob && isspace((int)(*val)); val++);
 
 	if (val + 8U > eob) {
 		;
@@ -675,7 +675,7 @@ _warc_rduri(const char *buf, size_t bsz)
 		return res;
 	}
 	/* overread whitespace */
-	for (val += sizeof(_key) - 1U; val < eob && isspace(*val); val++);
+	for (val += sizeof(_key) - 1U; val < eob && isspace((int)(*val)); val++);
 
 	/* overread URL designators */
 	if ((uri = xmemmem(val, eob - val, "://", 3U)) == NULL) {
@@ -691,7 +691,7 @@ _warc_rduri(const char *buf, size_t bsz)
 	/* also massage eol to point to the first whitespace
 	 * after the last non-whitespace character before
 	 * the end of the line */
-	for (; eol > uri && isspace(eol[-1]); eol--);
+	for (; eol > uri && isspace((int)(eol[-1])); eol--);
 
 	/* now then, inspect the URI */
 	if (memcmp(val, "file", 4U) == 0) {
@@ -726,7 +726,7 @@ _warc_rdlen(const char *buf, size_t bsz)
 	/* strtol kindly overreads whitespace for us, so use that */
 	val += sizeof(_key) - 1U;
 	len = strtol(val, &on, 10);
-	if (on == NULL || !isspace(*on)) {
+	if (on == NULL || !isspace((int)(*on))) {
 		/* hm, can we trust that number?  Best not. */
 		return -1;
 	}
@@ -749,7 +749,7 @@ _warc_rdrtm(const char *buf, size_t bsz)
 	/* xstrpisotime() kindly overreads whitespace for us, so use that */
 	val += sizeof(_key) - 1U;
 	res = xstrpisotime(val, &on);
-	if (on == NULL || !isspace(*on)) {
+	if (on == NULL || !isspace((int)(*on))) {
 		/* hm, can we trust that number?  Best not. */
 		return (time_t)-1;
 	}
@@ -772,7 +772,7 @@ _warc_rdmtm(const char *buf, size_t bsz)
 	/* xstrpisotime() kindly overreads whitespace for us, so use that */
 	val += sizeof(_key) - 1U;
 	res = xstrpisotime(val, &on);
-	if (on == NULL || !isspace(*on)) {
+	if (on == NULL || !isspace((int)(*on))) {
 		/* hm, can we trust that number?  Best not. */
 		return (time_t)-1;
 	}
diff --git a/libarchive_fe/passphrase.c b/libarchive_fe/passphrase.c
index 96d8f0a..7b4197d 100644
--- a/libarchive_fe/passphrase.c
+++ b/libarchive_fe/passphrase.c
@@ -234,11 +234,11 @@ restart:
 			if (p < end) {
 				if ((flags & RPP_SEVENBIT))
 					ch &= 0x7f;
-				if (isalpha(ch)) {
+				if (isalpha((int)(ch))) {
 					if ((flags & RPP_FORCELOWER))
-						ch = (char)tolower(ch);
+						ch = (char)tolower((int)(ch));
 					if ((flags & RPP_FORCEUPPER))
-						ch = (char)toupper(ch);
+						ch = (char)toupper((int)(ch));
 				}
 				*p++ = ch;
 			}
